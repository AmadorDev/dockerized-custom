version: "3.8"

services:
  mysql:
    image: mysql:8.0
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: masswa
      MYSQL_DATABASE: masswa
      MYSQL_USER: masswa
      MYSQL_PASSWORD: masswa
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3

  laravel:
    build:
      context: ./PJ2
      dockerfile: Dockerfile
    container_name: laravel_app
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
    env_file:
      - ./PJ2/.env
    volumes:
      - ./PJ2:/var/www 
      - laravel_storage:/var/www/storage
      - laravel_logs:/var/log/app
    ports:
      - "8000:8000"
    networks:
      - app_network

  # queue_worker:
  #   build:
  #     context: ./PJ2
  #     dockerfile: Dockerfile
  #   container_name: queue_worker
  #   restart: unless-stopped
  #   depends_on:
  #     - laravel
  #     #- redis
  #   env_file:
  #     - ./PJ2/.env
  #   volumes:
  #     - ./PJ2:/var/www
  #   command: ["php", "artisan", "queue:work"]
  #   networks:
  #     - app_network

  mongo:
    image: mongo:latest
    container_name: mongo_db
    restart: unless-stopped
    command: ["mongod", "--bind_ip", "0.0.0.0"]
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: masswa
      MONGO_INITDB_ROOT_PASSWORD: masswa
    volumes:
      - mongo_data:/data/db
    networks:
      - app_network

  node:
    build:
      context: ./PJ-NODE
      dockerfile: Dockerfile
    container_name: node_app
    restart: unless-stopped
    env_file:
      - ./PJ-NODE/.env
    volumes:
      - ./PJ-NODE:/usr/src/app
      - node_modules:/usr/src/app/node_modules
    ports:
      - "3001:3001"
    depends_on:
      - mongo
    networks:
      - app_network

  nginx:
    image: nginx:alpine
    container_name: nginx_server
    restart: unless-stopped
    depends_on:
      - laravel
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./PJ2/public:/var/www/public
    ports:
      - "80:80"
      - "5173:5173"
    networks:
      - app_network

volumes:
  mysql_data:
  mongo_data:
  node_modules:
  laravel_storage:
  laravel_logs:

networks:
  app_network:
    driver: bridge
